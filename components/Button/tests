// import { render, fireEvent } from "@testing-library/react";
// import Button from "./Button";

// describe("Button", () => {
//   it("renders children correctly", () => {
//     const { getByTestId } = render(<Button>Click me</Button>);
//     expect(getByTestId("button")).toHaveTextContent("Click me");
//   });

//   it("calls onClick handler when clicked", () => {
//     const handleClick = jest.fn();
//     const { getByTestId } = render(<Button onClick={handleClick}>Click me</Button>);
//     fireEvent.click(getByTestId("button"));
//     expect(handleClick).toHaveBeenCalled();
//   });

//   it("prevents click when disabled", () => {
//     const handleClick = jest.fn();
//     const { getByTestId } = render(<Button onClick={handleClick} disabled>Click me</Button>);
//     fireEvent.click(getByTestId("button"));
//     expect(handleClick).not.toHaveBeenCalled();
//   });

//   it("displays loading spinner when loading prop is true", () => {
//     const { getByTestId } = render(<Button loading>Click me</Button>);
//     expect(getByTestId("button")).toContainHTML("<svg class=\"btn-loader\"");
//   });

//   it("applies correct class names for variant prop", () => {
//     const { getByTestId } = render(<Button variant="primary">Click me</Button>);
//     expect(getByTestId("button")).toHaveClass("Button Button--primary");
//   });

//   it("passes through data-size prop to data-size attribute", () => {
//     const { getByTestId } = render(<Button dataSize="large">Click me</Button>);
//     expect(getByTestId("button")).toHaveAttribute("data-size", "large");
//   });
// });
